{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"dy",
				"dy01	float"
			],
			[
				"dx",
				"dx20	float"
			],
			[
				"cy",
				"cy20	float"
			],
			[
				"cx",
				"cx20	float"
			],
			[
				"edg",
				"edge20	float"
			],
			[
				"set",
				"set_pixel(size_t x, size_t y, const uint8_t *pixel)	void"
			],
			[
				"fab",
				"fabsf(float)	float"
			],
			[
				"get_tri",
				"get_triangle_varying0(TriangleData &vd)	VaryingData &"
			],
			[
				"view",
				"viewport() const	const Viewport &"
			],
			[
				"dep",
				"depth_buffer()	Framebuffer &"
			],
			[
				"depth",
				"depth_buffer()	Framebuffer &"
			],
			[
				"uint",
				"uint8_t	"
			],
			[
				"Ve",
				"Vec3	ShaderDataType"
			],
			[
				"swi",
				"swizzle(glm::comp X, glm::comp Y)	tref2<float>"
			],
			[
				"Trian",
				"TriangleArea(glm::vec3 &v0, glm::vec3 &v1, glm::vec3 &v2)	float"
			],
			[
				"ve",
				"vec3	"
			],
			[
				"get_trian",
				"get_triangle_vert0(TriangleData &vd)	glm::vec3 &"
			],
			[
				"incl",
				"include \"header\"	"
			],
			[
				"Draw",
				"DrawFlatBottomTriangle(Framebuffer &fb, glm::vec2 p0, glm::vec2 p1, glm::vec2 p2)	void"
			],
			[
				"for",
				"forv	Vector For Loop"
			],
			[
				"se",
				"set_pixel(size_t x, size_t y, const uint8_t *pixel)	void"
			],
			[
				"const",
				"constexpr	"
			],
			[
				"printf",
				"printf(const char *, ...)	int"
			],
			[
				"side",
				"sidesPoints	glm::vec2 [3][3]"
			],
			[
				"includ",
				"include <header>	"
			],
			[
				"SID",
				"SIDE_12	enum <anonymous>"
			],
			[
				"SIDE",
				"SIDE_01	enum <anonymous>"
			],
			[
				"def",
				"default:	"
			],
			[
				"inc",
				"include <header>	"
			],
			[
				"dra",
				"drawCall	DrawCall *"
			],
			[
				"fram",
				"framebuffer() const	const Framebuffer &"
			],
			[
				"Vec",
				"Vec4	ShaderDataType"
			],
			[
				"vsh",
				"vshoutput2	std::vector<ShaderVariable>"
			],
			[
				"Shader",
				"ShaderVariable	"
			],
			[
				"longs",
				"longsideDelta	float"
			],
			[
				"lonsid",
				"longsidePoints	glm::vec2 [2]"
			],
			[
				"lons",
				"longsidePoints	glm::vec2 [2]"
			],
			[
				"long",
				"longsidePoints	glm::vec2 [2]"
			],
			[
				"lon",
				"longsidePoints	glm::vec2 [2]"
			],
			[
				"dele",
				"delete expression	"
			],
			[
				"Pipe",
				"PipelineStageContext	"
			],
			[
				"back",
				"back() const	const_reference"
			],
			[
				"float",
				"float_t	"
			],
			[
				"Pip",
				"PipelineStageFunc	"
			],
			[
				"read",
				"read_fbo	GLuint"
			],
			[
				"GL_READ",
				"GL_READ_FRAMEBUFFER	"
			],
			[
				"glBlitFramebuffer",
				"glBlitFramebufferEXT(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter)	void"
			],
			[
				"glFramebufferTexture2D",
				"glFramebufferTexture2D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)	void"
			],
			[
				"strcp",
				"strcpy(char *, const char *)	char *"
			],
			[
				"leftS",
				"leftSize"
			],
			[
				"righ",
				"rightSize"
			],
			[
				"left",
				"leftSorted"
			],
			[
				"size",
				"size_t	"
			],
			[
				"ski",
				"skiplist_t	"
			],
			[
				"initWit",
				"insertValue:(id) inPropertyWithKey:(NSString *)	void"
			],
			[
				"cur",
				"current	skiplist_t::internal_node_t *"
			],
			[
				"curr",
				"currentLevel"
			],
			[
				"linke",
				"linkedlist	linked_node_t<T> *"
			],
			[
				"linked",
				"linked_node_t<typename T>	"
			],
			[
				"link",
				"linked_node_t<typename T>	"
			],
			[
				"print",
				"print_level"
			],
			[
				"skip",
				"skiplist"
			],
			[
				"pri",
				"printf	printf …"
			],
			[
				"int",
				"int_linked_node_t"
			],
			[
				"li",
				"linked_node_t"
			],
			[
				"include",
				"include <header>	"
			],
			[
				"merg",
				"mergesort"
			],
			[
				"st",
				"start"
			],
			[
				"meg",
				"mergesort_internal"
			],
			[
				"cl",
				"clGetPlatformInfo(int platform, int param_name, size_t param_value_size, void *param_value, size_t *param_value_size_ret)	int"
			],
			[
				"dictionarWithObj",
				"dictionaryWithObjects:(NSArray *) forKeys:(NSArray *)	id"
			],
			[
				"lin",
				"lineString"
			]
		]
	},
	"buffers":
	[
		{
			"file": "project/src/main.cpp",
			"settings":
			{
				"buffer_size": 3937,
				"line_ending": "Unix"
			}
		},
		{
			"file": "project/src/DefaultRasteriser.cpp",
			"settings":
			{
				"buffer_size": 4454,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Makefile/Make.sublime-build",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				":w",
				":w - Save"
			],
			[
				":",
				":w - Save"
			],
			[
				"git s",
				"Git: Status"
			],
			[
				"git ad",
				"Git: Custom Command"
			],
			[
				"git sta",
				"Git: Status"
			],
			[
				"Package",
				"Package Control: Install Package"
			],
			[
				"Package Up",
				"Package Control: Upgrade Package"
			],
			[
				"python",
				"SublimeREPL: Python - RUN current file"
			],
			[
				"Package Ins",
				"Package Control: Install Package"
			],
			[
				"Pac",
				"Package Control: Install Package"
			],
			[
				"Package Dic",
				"Package Control: Discover Packages"
			],
			[
				"Packa Li",
				"Package Control: List Packages"
			],
			[
				"Packag",
				"Package Control: List Packages"
			],
			[
				"SublimeClang",
				"SublimeClang: Clear cache"
			],
			[
				"Sublime",
				"SublimePTY"
			],
			[
				"Packa",
				"Package Control: Install Package"
			],
			[
				"Packge",
				"Package Control: Install Package"
			],
			[
				"GDB",
				"Preferences: SublimeGDB Settings – Default"
			],
			[
				"Packe",
				"Package Control: Install Package"
			],
			[
				"Pack",
				"Package Control: List Packages"
			],
			[
				"Package Control:",
				"Package Control: Upgrade Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 144.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": true,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/jhaberstro/Personal-Projects/software-rasterizer/project/src/main.cpp",
		"/Users/jhaberstro/Personal-Projects/software-rasterizer/project/resources.txt",
		"/Users/jhaberstro/Personal-Projects/software-rasterizer/software-rasterizer.sublime-project",
		"/Users/jhaberstro/Personal-Projects/software-rasterizer/project/src/Context.cpp",
		"/Users/jhaberstro/Personal-Projects/software-rasterizer/project/src/Context.hpp",
		"/Users/jhaberstro/Personal-Projects/software-rasterizer/project/src/Pipeline.hpp",
		"/Users/jhaberstro/Personal-Projects/software-rasterizer/project/src/Pipeline.cpp",
		"/Users/jhaberstro/Personal-Projects/software-rasterizer/project/src/DefaultRasteriser.cpp",
		"/Users/jhaberstro/Personal-Projects/software-rasterizer/project/src/Framebuffer.cpp",
		"/Users/jhaberstro/Personal-Projects/software-rasterizer/project/src/Framebuffer.hpp",
		"/Users/jhaberstro/Personal-Projects/software-rasterizer/project/Makefile",
		"/Users/jhaberstro/Personal-Projects/software-rasterizer/project/src/DefaultRasteriser.hpp",
		"/Users/jhaberstro/Personal-Projects/software-rasterizer/project/src/DefaultRasteriser",
		"/Users/jhaberstro/Personal-Projects/software-rasterizer/project/src/DefaultRasterizer.hpp",
		"/Users/jhaberstro/Library/Application Support/Sublime Text 2/Packages/SublimeClang/SublimeClang.sublime-settings",
		"/Users/jhaberstro/Library/Application Support/Sublime Text 2/Packages/SublimeClang/Default.sublime-keymap",
		"/Users/jhaberstro/Personal-Projects/software-rasterizer/project/",
		"/Users/jhaberstro/Personal-Projects/software-rasterizer/project/src/main.h",
		"/Users/jhaberstro/Personal-Projects/software-rasterizer/project/src/test.h",
		"/Users/jhaberstro/Library/Application Support/Sublime Text 2/Packages/User/SublimeClang.sublime-settings",
		"/Users/jhaberstro/Personal-Projects/software-rasterizer/project/src/main.c",
		"/Users/jhaberstro/Documents/School/Transfer Application/UMass NetID",
		"/Users/jhaberstro/Personal-Projects/interview-practice/str_reverse.c",
		"/Users/jhaberstro/Personal-Projects/interview-practice/mergesort.c",
		"/Users/jhaberstro/Documents/Courses/Stanford Online Courses/Algorithm Design and Analysis 1/count_inversions.py",
		"/Users/jhaberstro/Personal-Projects/interview-practice/skiplist.cpp",
		"/Users/jhaberstro/Documents/School/RIT/American Politics/Notes.txt",
		"/Users/jhaberstro/Documents/School/Stanford Online Courses/Algorithm Design and Analysis 1/count_inversions.py",
		"/Users/jhaberstro/Personal-Projects/gameboy-emulator/project/src/memory.c",
		"/usr/include/c++/4.2.1/bits/stl_algobase.h",
		"/Users/jhaberstro/Personal-Projects/gameboy-emulator/project/src/cpu.h",
		"/Users/jhaberstro/Personal-Projects/gameboy-emulator/project/src/cpu.c",
		"/Users/jhaberstro/Personal-Projects/gameboy-emulator/project/src/main.c",
		"/Users/jhaberstro/Personal-Projects/gameboy-emulator/gameboy-emulator.sublime-project",
		"/Users/jhaberstro/Personal-Projects/gameboy-emulator/Makefile",
		"/Users/jhaberstro/Personal-Projects/jaml/jaml-parser/jaml-parser/JHJAMLParser.h",
		"/Users/jhaberstro/Personal-Projects/jaml/jaml-parser/jaml-parser/JHJAMLParser.m",
		"/Users/jhaberstro/Personal-Projects/gameboy-emulator/src/cpu.h",
		"/Users/jhaberstro/Personal-Projects/gameboy-emulator/src/cpu.c",
		"/Users/jhaberstro/Library/Application Support/Sublime Text 2/Packages/SublimeGDB/Default.sublime-keymap",
		"/Users/jhaberstro/Library/Application Support/Sublime Text 2/Packages/SublimeGDB/SublimeGDB.sublime-settings",
		"/Users/jhaberstro/Library/Application Support/Sublime Text 2/Packages/User/SublimeGDB.sublime-settings",
		"/private/tmp/mergesort.c",
		"/private/tmp/byte_reverse.c",
		"/private/tmp/skiplist.cpp",
		"/Users/jhaberstro/Library/Application Support/Sublime Text 2/Packages/Default/Preferences.sublime-settings",
		"/usr/include/stdlib.h",
		"/Users/jhaberstro/Personal-Projects/jocl/source/api/platform/cl_platform_info.c",
		"/Users/jhaberstro/Library/Application Support/Sublime Text 2/Packages/Default/Global.sublime-settings",
		"/System/Library/Frameworks/Foundation.framework/Headers/NSObjCRuntime.h",
		"/Users/jhaberstro/Personal-Projects/joh-engine/src/joh/Assert.cpp",
		"/Users/jhaberstro/Library/Application Support/Sublime Text 2/Packages/User/Base File.sublime-settings",
		"/Users/jhaberstro/Library/Application Support/Sublime Text 2/Packages/Default/Base File.sublime-settings"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"x1",
			"x3",
			"x2",
			"y3",
			"r1",
			"y2",
			"r3",
			"r2",
			"y1",
			";",
			"len12",
			"len01",
			"len02",
			"clip",
			"Context",
			"Uniform",
			"ContextType",
			"Pipeline< TContext >::",
			"template< typename TContext >",
			"ContextType",
			"num_pipelin",
			"glClearColor",
			"	        \"",
			"range",
			"ms",
			"int",
			"skiplist_t",
			"printf",
			"	",
			"n",
			"commandline",
			";",
			"_tokenize:"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"v0.x",
			"v2.x",
			"v1.x",
			"v2.y",
			"v0.z",
			"v1.y",
			"v2.z",
			"v1.z",
			"v0.y",
			"lengths[SIDE_12]",
			"lengths[SIDE_01]",
			"lengths[SIDE_02]",
			"StateContext",
			"ShaderVariable",
			"ShaderVariable*",
			"Context*",
			"Pipeline< TStateContext, TStageContext >::",
			"template< typename TStateContext, typename TStageContext >",
			"StateContextType"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "project/src/main.cpp",
					"settings":
					{
						"buffer_size": 3937,
						"regions":
						{
						},
						"selection":
						[
							[
								2193,
								2193
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 798.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "project/src/DefaultRasteriser.cpp",
					"settings":
					{
						"buffer_size": 4454,
						"regions":
						{
						},
						"selection":
						[
							[
								4220,
								4220
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1014.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.clang":
	{
		"height": 100.0
	},
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"def",
				"src/DefaultRasteriser.cpp"
			],
			[
				"mai",
				"src/main.cpp"
			],
			[
				"main",
				"src/main.cpp"
			],
			[
				"frame",
				"src/Framebuffer.hpp"
			],
			[
				"res",
				"resources.txt"
			],
			[
				"pi",
				"src/Pipeline.cpp"
			],
			[
				"resou",
				"resources.txt"
			],
			[
				"con",
				"src/Context.hpp"
			],
			[
				"cont",
				"src/Context.hpp"
			],
			[
				"c",
				"src/Context.hpp"
			],
			[
				"mak",
				"Makefile"
			],
			[
				"make",
				"Makefile"
			],
			[
				"default",
				"src/DefaultRasteriser.cpp"
			],
			[
				"defau",
				"src/DefaultRasteriser.cpp"
			],
			[
				"pip",
				"src/Pipeline.hpp"
			],
			[
				"context",
				"src/Context.hpp"
			],
			[
				"context.h",
				"src/Context.hpp"
			],
			[
				"rame",
				"src/Framebuffer.hpp"
			],
			[
				"fracpp",
				"src/Framebuffer.cpp"
			],
			[
				"main.cp",
				"src/main.cpp"
			],
			[
				"fram",
				"src/Framebuffer.hpp"
			],
			[
				"frhpp",
				"src/Framebuffer.hpp"
			],
			[
				"ma",
				"Makefile"
			],
			[
				"test",
				"src/test.h"
			],
			[
				"memor",
				"src/memory.c"
			],
			[
				"maic",
				"src/main.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 193.0,
	"status_bar_visible": true
}
